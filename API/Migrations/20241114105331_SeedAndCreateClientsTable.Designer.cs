// <auto-generated />
using System;
using API.Persistence;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20241114105331_SeedAndCreateClientsTable")]
    partial class SeedAndCreateClientsTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.31")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("API.Core.Domain.Client", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Clients");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Address = "175-8643 Cras Av.",
                            Email = "rhoncus@yahoo.com",
                            Name = "Walker Dunlap",
                            Phone = "1-756-778-8528"
                        },
                        new
                        {
                            Id = 2,
                            Address = "Ap #384-5309 Aliquam Av.",
                            Email = "dui.cum.sociis@icloud.com",
                            Name = "Lesley Flynn",
                            Phone = "(733) 706-5378"
                        },
                        new
                        {
                            Id = 3,
                            Address = "P.O. Box 552, 4673 Dolor Street",
                            Email = "viverra.maecenas.iaculis@outlook.org",
                            Name = "Valentine Bowen",
                            Phone = "1-658-338-1766"
                        },
                        new
                        {
                            Id = 4,
                            Address = "Ap #993-1416 Ipsum Av.",
                            Email = "curabitur.massa@outlook.edu",
                            Name = "Odessa Aguilar",
                            Phone = "1-438-538-8577"
                        },
                        new
                        {
                            Id = 5,
                            Address = "Ap #380-2631 Neque St.",
                            Email = "dictum.eu@hotmail.com",
                            Name = "Cairo Carney",
                            Phone = "(972) 514-6289"
                        },
                        new
                        {
                            Id = 6,
                            Address = "9090 Eu Ave",
                            Email = "commodo@protonmail.net",
                            Name = "Grady Cleveland",
                            Phone = "(638) 451-4867"
                        },
                        new
                        {
                            Id = 7,
                            Address = "P.O. Box 486, 1655 Ipsum Avenue",
                            Email = "enim.suspendisse@hotmail.org",
                            Name = "Jaime Clements",
                            Phone = "1-294-529-1445"
                        },
                        new
                        {
                            Id = 8,
                            Address = "Ap #662-5027 Mauris Rd.",
                            Email = "magna.cras@icloud.com",
                            Name = "Callie Pena",
                            Phone = "1-763-906-5555"
                        },
                        new
                        {
                            Id = 9,
                            Address = "6727 Sit St.",
                            Email = "aliquam.nec.enim@protonmail.couk",
                            Name = "Darius Cabrera",
                            Phone = "(535) 155-5231"
                        },
                        new
                        {
                            Id = 10,
                            Address = "2356 Donec St.",
                            Email = "a@hotmail.net",
                            Name = "Allen Jennings",
                            Phone = "1-967-811-4718"
                        },
                        new
                        {
                            Id = 11,
                            Address = "Ap #533-3573 Ac Ave",
                            Email = "et.nunc@google.com",
                            Name = "Kennedy Paul",
                            Phone = "(248) 762-9781"
                        },
                        new
                        {
                            Id = 12,
                            Address = "P.O. Box 544, 8914 Euismod St.",
                            Email = "eros.proin@aol.org",
                            Name = "Joshua Duncan",
                            Phone = "(207) 431-7447"
                        },
                        new
                        {
                            Id = 13,
                            Address = "284-5620 Parturient St.",
                            Email = "purus@aol.edu",
                            Name = "Oleg Grimes",
                            Phone = "1-351-882-6315"
                        },
                        new
                        {
                            Id = 14,
                            Address = "333-2382 Eu Avenue",
                            Email = "et.malesuada@yahoo.couk",
                            Name = "Kay Spears",
                            Phone = "(461) 845-7299"
                        },
                        new
                        {
                            Id = 15,
                            Address = "661-8553 Phasellus Av.",
                            Email = "consequat.nec@yahoo.edu",
                            Name = "Macy Chavez",
                            Phone = "1-659-218-6557"
                        },
                        new
                        {
                            Id = 16,
                            Address = "4320 Ipsum St.",
                            Email = "ipsum.ac.mi@protonmail.com",
                            Name = "Cameron Fleming",
                            Phone = "1-744-272-1687"
                        },
                        new
                        {
                            Id = 17,
                            Address = "Ap #403-4298 Eros. Ave",
                            Email = "donec.feugiat.metus@protonmail.edu",
                            Name = "Kibo Wade",
                            Phone = "1-632-556-2997"
                        },
                        new
                        {
                            Id = 18,
                            Address = "4867 Non, Rd.",
                            Email = "adipiscing.ligula@aol.com",
                            Name = "Shelby Kelley",
                            Phone = "1-672-793-8588"
                        },
                        new
                        {
                            Id = 19,
                            Address = "668-7154 Nullam Street",
                            Email = "nunc@hotmail.couk",
                            Name = "Judith Hobbs",
                            Phone = "(273) 846-3377"
                        },
                        new
                        {
                            Id = 20,
                            Address = "599-3498 Odio, St.",
                            Email = "orci.luctus.et@icloud.ca",
                            Name = "Isadora Mendoza",
                            Phone = "1-313-667-9603"
                        },
                        new
                        {
                            Id = 21,
                            Address = "928-3422 Sed, St.",
                            Email = "vitae.erat@aol.com",
                            Name = "Francis Downs",
                            Phone = "(324) 380-3566"
                        },
                        new
                        {
                            Id = 22,
                            Address = "3983 Mauris Avenue",
                            Email = "mauris@google.ca",
                            Name = "Mallory Maxwell",
                            Phone = "1-944-601-1472"
                        },
                        new
                        {
                            Id = 23,
                            Address = "P.O. Box 299, 6307 Mi Rd.",
                            Email = "eu.odio@protonmail.couk",
                            Name = "Unity Larsen",
                            Phone = "1-585-268-3515"
                        },
                        new
                        {
                            Id = 24,
                            Address = "9368 Ut, Rd.",
                            Email = "imperdiet@outlook.edu",
                            Name = "Hyatt Craig",
                            Phone = "(249) 651-0222"
                        },
                        new
                        {
                            Id = 25,
                            Address = "Ap #167-6481 Aptent Ave",
                            Email = "quis.arcu@google.couk",
                            Name = "Jonah Hutchinson",
                            Phone = "1-654-712-1501"
                        },
                        new
                        {
                            Id = 26,
                            Address = "Ap #973-8996 Risus Rd.",
                            Email = "interdum@google.edu",
                            Name = "Keaton Travis",
                            Phone = "(378) 163-7101"
                        },
                        new
                        {
                            Id = 27,
                            Address = "300-1766 Ligula Road",
                            Email = "iaculis.nec.eleifend@yahoo.net",
                            Name = "Timon Bond",
                            Phone = "1-524-658-3325"
                        },
                        new
                        {
                            Id = 28,
                            Address = "197-459 Aliquet. Rd.",
                            Email = "eleifend@protonmail.edu",
                            Name = "Lisandra Peterson",
                            Phone = "1-655-957-9132"
                        },
                        new
                        {
                            Id = 29,
                            Address = "424-5260 Neque Ave",
                            Email = "sem.mollis@google.edu",
                            Name = "Yuli Burch",
                            Phone = "(427) 453-6142"
                        },
                        new
                        {
                            Id = 30,
                            Address = "Ap #173-9457 Consectetuer Road",
                            Email = "eu.neque@hotmail.ca",
                            Name = "Denton Long",
                            Phone = "(871) 216-6886"
                        },
                        new
                        {
                            Id = 31,
                            Address = "686-9354 Ac Avenue",
                            Email = "proin@outlook.ca",
                            Name = "Hadley Waters",
                            Phone = "1-704-268-0966"
                        },
                        new
                        {
                            Id = 32,
                            Address = "646-6553 Tempus Rd.",
                            Email = "integer.vulputate@hotmail.couk",
                            Name = "Cassady Ingram",
                            Phone = "1-889-603-8469"
                        },
                        new
                        {
                            Id = 33,
                            Address = "8278 Eros St.",
                            Email = "sem.eget@outlook.couk",
                            Name = "Olivia Melendez",
                            Phone = "1-483-397-3219"
                        },
                        new
                        {
                            Id = 34,
                            Address = "Ap #666-4284 Vivamus Street",
                            Email = "vehicula.risus@hotmail.com",
                            Name = "Fatima Hill",
                            Phone = "1-756-238-6505"
                        },
                        new
                        {
                            Id = 35,
                            Address = "Ap #737-5707 Ut St.",
                            Email = "praesent.luctus@protonmail.org",
                            Name = "McKenzie Farmer",
                            Phone = "(419) 781-3315"
                        },
                        new
                        {
                            Id = 36,
                            Address = "Ap #488-3589 Sit St.",
                            Email = "eros@icloud.org",
                            Name = "Petra Delaney",
                            Phone = "1-765-517-0753"
                        },
                        new
                        {
                            Id = 37,
                            Address = "8623 Imperdiet Av.",
                            Email = "sapien.cursus@protonmail.ca",
                            Name = "Ronan George",
                            Phone = "(979) 573-0280"
                        },
                        new
                        {
                            Id = 38,
                            Address = "430-6273 Nunc St.",
                            Email = "risus.duis@outlook.org",
                            Name = "Blossom Franco",
                            Phone = "(904) 765-6812"
                        },
                        new
                        {
                            Id = 39,
                            Address = "126-3197 Leo Ave",
                            Email = "eleifend.non@yahoo.couk",
                            Name = "Kasper Hernandez",
                            Phone = "1-268-327-6484"
                        },
                        new
                        {
                            Id = 40,
                            Address = "1706 Rutrum Ave",
                            Email = "ornare@aol.ca",
                            Name = "Laurel Acosta",
                            Phone = "1-481-187-8686"
                        },
                        new
                        {
                            Id = 41,
                            Address = "Ap #995-2889 Ipsum St.",
                            Email = "est@aol.couk",
                            Name = "Melissa Barber",
                            Phone = "1-208-486-2847"
                        },
                        new
                        {
                            Id = 42,
                            Address = "131-3269 Ante Ave",
                            Email = "cursus@icloud.net",
                            Name = "Martin Stanley",
                            Phone = "(668) 634-0594"
                        },
                        new
                        {
                            Id = 43,
                            Address = "P.O. Box 568, 7162 Morbi St.",
                            Email = "ipsum@protonmail.org",
                            Name = "Macon Pace",
                            Phone = "1-559-734-4983"
                        },
                        new
                        {
                            Id = 44,
                            Address = "262-1422 Turpis. Rd.",
                            Email = "eu.turpis.nulla@protonmail.couk",
                            Name = "Giacomo Prince",
                            Phone = "1-215-426-4288"
                        },
                        new
                        {
                            Id = 45,
                            Address = "1365 Eu Rd.",
                            Email = "sit.amet@icloud.org",
                            Name = "Joseph Alston",
                            Phone = "1-746-396-3766"
                        },
                        new
                        {
                            Id = 46,
                            Address = "1624 Aenean St.",
                            Email = "nisl.nulla@protonmail.edu",
                            Name = "Nolan Goodwin",
                            Phone = "1-943-197-7017"
                        },
                        new
                        {
                            Id = 47,
                            Address = "Ap #355-3788 Amet Ave",
                            Email = "integer.tincidunt.aliquam@google.org",
                            Name = "Davis Rhodes",
                            Phone = "(744) 664-7044"
                        },
                        new
                        {
                            Id = 48,
                            Address = "P.O. Box 598, 5537 Dictum Av.",
                            Email = "arcu.imperdiet.ullamcorper@aol.couk",
                            Name = "Amir Wells",
                            Phone = "(904) 185-9180"
                        },
                        new
                        {
                            Id = 49,
                            Address = "Ap #352-2405 Nonummy. Rd.",
                            Email = "vel.mauris@protonmail.edu",
                            Name = "Emery Kerr",
                            Phone = "(915) 210-1548"
                        },
                        new
                        {
                            Id = 50,
                            Address = "539-1608 Volutpat. Rd.",
                            Email = "in.mi@aol.com",
                            Name = "Kenneth Whitley",
                            Phone = "(888) 266-7052"
                        },
                        new
                        {
                            Id = 51,
                            Address = "114-7565 Ac Ave",
                            Email = "arcu.vel.quam@protonmail.ca",
                            Name = "Regan Hines",
                            Phone = "1-366-486-8687"
                        },
                        new
                        {
                            Id = 52,
                            Address = "662-9329 Quis Street",
                            Email = "curabitur.egestas.nunc@google.couk",
                            Name = "Savannah Sanders",
                            Phone = "1-311-429-2182"
                        },
                        new
                        {
                            Id = 53,
                            Address = "868-771 Ut Street",
                            Email = "libero.est.congue@hotmail.ca",
                            Name = "Joelle Barlow",
                            Phone = "1-622-127-3324"
                        },
                        new
                        {
                            Id = 54,
                            Address = "Ap #316-6290 Aptent Avenue",
                            Email = "dolor.nonummy@yahoo.com",
                            Name = "Chantale Suarez",
                            Phone = "1-113-255-6555"
                        },
                        new
                        {
                            Id = 55,
                            Address = "8413 Etiam Ave",
                            Email = "egestas.blandit@aol.org",
                            Name = "Stuart Castaneda",
                            Phone = "1-157-365-6216"
                        },
                        new
                        {
                            Id = 56,
                            Address = "P.O. Box 865, 316 Nulla Ave",
                            Email = "morbi.quis@icloud.ca",
                            Name = "Shaeleigh Battle",
                            Phone = "1-314-788-5584"
                        },
                        new
                        {
                            Id = 57,
                            Address = "Ap #124-1406 Nec, Ave",
                            Email = "per.conubia.nostra@aol.net",
                            Name = "Rebecca Bender",
                            Phone = "1-912-575-0657"
                        },
                        new
                        {
                            Id = 58,
                            Address = "Ap #501-7722 Eu, St.",
                            Email = "magna@aol.org",
                            Name = "Moses Weiss",
                            Phone = "1-764-866-6162"
                        },
                        new
                        {
                            Id = 59,
                            Address = "P.O. Box 644, 2777 Nec, St.",
                            Email = "vitae@yahoo.net",
                            Name = "Declan Knowles",
                            Phone = "(317) 965-0457"
                        },
                        new
                        {
                            Id = 60,
                            Address = "P.O. Box 380, 4416 Fames Street",
                            Email = "lobortis.risus@protonmail.edu",
                            Name = "Herrod Moon",
                            Phone = "1-387-411-0724"
                        },
                        new
                        {
                            Id = 61,
                            Address = "152-643 Dui, Road",
                            Email = "vulputate.mauris@aol.ca",
                            Name = "Lucas Barton",
                            Phone = "1-386-900-1170"
                        },
                        new
                        {
                            Id = 62,
                            Address = "P.O. Box 177, 6210 Dis St.",
                            Email = "eget.nisi@icloud.org",
                            Name = "Jessamine Booth",
                            Phone = "1-947-677-7052"
                        },
                        new
                        {
                            Id = 63,
                            Address = "Ap #114-9406 Faucibus St.",
                            Email = "arcu.iaculis@protonmail.couk",
                            Name = "Zelenia Ford",
                            Phone = "1-778-969-9709"
                        },
                        new
                        {
                            Id = 64,
                            Address = "Ap #671-8672 Pharetra Rd.",
                            Email = "urna.nunc@aol.couk",
                            Name = "Brandon Mckenzie",
                            Phone = "1-371-741-2404"
                        },
                        new
                        {
                            Id = 65,
                            Address = "Ap #769-3221 Mauris Rd.",
                            Email = "eleifend.non@yahoo.edu",
                            Name = "Jasper Williamson",
                            Phone = "(524) 459-6682"
                        },
                        new
                        {
                            Id = 66,
                            Address = "P.O. Box 409, 6436 In, Street",
                            Email = "in.aliquet@hotmail.edu",
                            Name = "Pamela Griffin",
                            Phone = "(373) 876-2450"
                        },
                        new
                        {
                            Id = 67,
                            Address = "775-1504 Tincidunt St.",
                            Email = "commodo.at@outlook.net",
                            Name = "Elmo Singleton",
                            Phone = "1-994-876-4111"
                        },
                        new
                        {
                            Id = 68,
                            Address = "712-5462 Metus Road",
                            Email = "non.sapien@aol.net",
                            Name = "Margaret Simpson",
                            Phone = "(408) 525-1090"
                        },
                        new
                        {
                            Id = 69,
                            Address = "4573 Ac Rd.",
                            Email = "mi.tempor@google.couk",
                            Name = "Tana Hayes",
                            Phone = "(533) 266-2172"
                        },
                        new
                        {
                            Id = 70,
                            Address = "195-4423 Interdum. Av.",
                            Email = "gravida@hotmail.ca",
                            Name = "Marvin Berg",
                            Phone = "1-183-836-7359"
                        },
                        new
                        {
                            Id = 71,
                            Address = "8369 Consectetuer Street",
                            Email = "ipsum@icloud.org",
                            Name = "Ciara Duncan",
                            Phone = "1-559-785-0373"
                        },
                        new
                        {
                            Id = 72,
                            Address = "453-985 Pharetra. Av.",
                            Email = "enim.commodo@protonmail.edu",
                            Name = "Hamilton Santos",
                            Phone = "(607) 667-1298"
                        },
                        new
                        {
                            Id = 73,
                            Address = "Ap #696-5509 Eu Street",
                            Email = "volutpat.ornare.facilisis@yahoo.edu",
                            Name = "Glenna Frederick",
                            Phone = "(593) 886-6264"
                        },
                        new
                        {
                            Id = 74,
                            Address = "562-5651 Dui, St.",
                            Email = "eu@hotmail.couk",
                            Name = "Indigo Lindsay",
                            Phone = "(725) 369-5177"
                        },
                        new
                        {
                            Id = 75,
                            Address = "216-9762 Consectetuer Street",
                            Email = "dolor.nonummy.ac@hotmail.org",
                            Name = "Channing Monroe",
                            Phone = "1-200-711-9862"
                        },
                        new
                        {
                            Id = 76,
                            Address = "P.O. Box 595, 2170 Arcu Rd.",
                            Email = "a@hotmail.com",
                            Name = "Alan Decker",
                            Phone = "(783) 816-4935"
                        },
                        new
                        {
                            Id = 77,
                            Address = "Ap #291-3174 Vel, Av.",
                            Email = "suspendisse.aliquet@aol.edu",
                            Name = "Lucian Wilkins",
                            Phone = "(838) 631-6708"
                        },
                        new
                        {
                            Id = 78,
                            Address = "Ap #633-472 Duis Av.",
                            Email = "eros.non@aol.edu",
                            Name = "Catherine Crane",
                            Phone = "1-884-582-2053"
                        },
                        new
                        {
                            Id = 79,
                            Address = "1338 Iaculis, Street",
                            Email = "morbi.sit.amet@google.net",
                            Name = "Gay Reed",
                            Phone = "1-514-378-1083"
                        },
                        new
                        {
                            Id = 80,
                            Address = "237-5330 Velit. St.",
                            Email = "phasellus.in.felis@google.ca",
                            Name = "Richard Snider",
                            Phone = "1-573-474-1764"
                        },
                        new
                        {
                            Id = 81,
                            Address = "146-6172 Lorem, St.",
                            Email = "tempus.eu.ligula@aol.couk",
                            Name = "Portia Valdez",
                            Phone = "(644) 471-2189"
                        },
                        new
                        {
                            Id = 82,
                            Address = "1491 Hendrerit Road",
                            Email = "penatibus.et.magnis@aol.com",
                            Name = "Avye Carlson",
                            Phone = "1-918-920-6268"
                        },
                        new
                        {
                            Id = 83,
                            Address = "Ap #535-2809 Integer Avenue",
                            Email = "erat.eget@yahoo.com",
                            Name = "Alexis Arnold",
                            Phone = "1-774-479-3553"
                        },
                        new
                        {
                            Id = 84,
                            Address = "P.O. Box 750, 6605 Viverra. St.",
                            Email = "mattis.cras@hotmail.com",
                            Name = "Medge Hubbard",
                            Phone = "1-416-874-4265"
                        },
                        new
                        {
                            Id = 85,
                            Address = "437-6562 Purus, Rd.",
                            Email = "ac@outlook.edu",
                            Name = "Harding Wise",
                            Phone = "(247) 172-8557"
                        },
                        new
                        {
                            Id = 86,
                            Address = "264-3980 Scelerisque St.",
                            Email = "turpis@outlook.com",
                            Name = "Hope Hawkins",
                            Phone = "(723) 928-1871"
                        },
                        new
                        {
                            Id = 87,
                            Address = "551-2465 Id Road",
                            Email = "curae.phasellus.ornare@google.com",
                            Name = "Ramona Russo",
                            Phone = "1-676-549-8461"
                        },
                        new
                        {
                            Id = 88,
                            Address = "P.O. Box 758, 8535 Non Rd.",
                            Email = "et.rutrum@icloud.edu",
                            Name = "Chloe Roberson",
                            Phone = "1-626-668-3977"
                        },
                        new
                        {
                            Id = 89,
                            Address = "P.O. Box 321, 3121 Lobortis Av.",
                            Email = "ut.cursus@protonmail.couk",
                            Name = "Dante Blackwell",
                            Phone = "(324) 867-3674"
                        },
                        new
                        {
                            Id = 90,
                            Address = "Ap #717-5453 Pellentesque Street",
                            Email = "nisi@outlook.org",
                            Name = "Randall Chavez",
                            Phone = "(661) 944-1553"
                        },
                        new
                        {
                            Id = 91,
                            Address = "P.O. Box 319, 6438 Turpis St.",
                            Email = "elementum.purus.accumsan@outlook.com",
                            Name = "Amena Vaughan",
                            Phone = "1-813-431-1825"
                        },
                        new
                        {
                            Id = 92,
                            Address = "154-3877 Bibendum Av.",
                            Email = "luctus.felis@protonmail.ca",
                            Name = "Adrienne Delacruz",
                            Phone = "(542) 381-5047"
                        },
                        new
                        {
                            Id = 93,
                            Address = "Ap #223-4649 Non St.",
                            Email = "volutpat.nunc@icloud.couk",
                            Name = "Tasha Waters",
                            Phone = "1-317-336-6625"
                        },
                        new
                        {
                            Id = 94,
                            Address = "Ap #614-2860 Scelerisque Av.",
                            Email = "id@protonmail.couk",
                            Name = "Sheila Hines",
                            Phone = "1-675-414-2648"
                        },
                        new
                        {
                            Id = 95,
                            Address = "3609 Ultricies Av.",
                            Email = "sed.eget.lacus@outlook.couk",
                            Name = "Melvin Sparks",
                            Phone = "(584) 443-3016"
                        },
                        new
                        {
                            Id = 96,
                            Address = "Ap #732-320 Ornare, Street",
                            Email = "vel.nisl@hotmail.com",
                            Name = "Giselle Higgins",
                            Phone = "1-214-437-2411"
                        },
                        new
                        {
                            Id = 97,
                            Address = "P.O. Box 785, 1821 Cursus Avenue",
                            Email = "justo.faucibus@yahoo.net",
                            Name = "Oliver Carter",
                            Phone = "1-332-503-1227"
                        },
                        new
                        {
                            Id = 98,
                            Address = "450-5963 Ipsum Road",
                            Email = "aliquam.enim.nec@aol.ca",
                            Name = "Caesar Romero",
                            Phone = "1-722-293-2236"
                        },
                        new
                        {
                            Id = 99,
                            Address = "871-3209 At, St.",
                            Email = "habitant.morbi@hotmail.com",
                            Name = "Ryder Crawford",
                            Phone = "1-252-846-9668"
                        },
                        new
                        {
                            Id = 100,
                            Address = "7764 Eu Rd.",
                            Email = "sem.ut@icloud.com",
                            Name = "Charde Bruce",
                            Phone = "(706) 247-6566"
                        });
                });

            modelBuilder.Entity("API.Core.Domain.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("API.Core.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("API.Core.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("API.Core.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("API.Core.Domain.User", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
